{"version":3,"sources":["components/NotFoundPage/NotFoundPage.jsx","api.js","components/PersonRow/PersonRow.jsx","components/PeopleTable/PeopleTable.jsx","components/PeoplePage/PeoplePage.jsx","App.jsx","index.jsx"],"names":["NotFoundPage","getPeople","a","fetch","response","json","PersonRow","person","name","sex","born","died","fatherName","motherName","slug","mother","father","personSlug","useParams","className","classnames","activePerson","to","PeopleTable","people","map","key","PeoplePage","useState","setPeople","useEffect","then","result","find","any","length","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,G,MAAe,kBAC1B,gD,yCCAWC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHN,qEAEM,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qD,iBCGTC,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBC,EAQKD,EARLC,KACNC,EAOWF,EAPXE,IACAC,EAMWH,EANXG,KACAC,EAKWJ,EALXI,KACAC,EAIWL,EAJXK,WACAC,EAGWN,EAHXM,WACAC,EAEWP,EAFXO,KACAC,EACWR,EADXQ,OACAC,EAAWT,EAAXS,OAEMC,EAAeC,cAAfD,WAER,OACE,oCACE,wBAAIE,UAAWC,IAAW,CACxBC,aAAcJ,IAAeH,KAG7B,4BACE,kBAAC,IAAD,CACEK,UAAWC,IAAW,CACpB,WAAoB,MAARX,EACZ,aAAsB,MAARA,IAEhBa,GAAE,kBAAaR,IAEdN,IAGL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,GACL,4BACGI,EAEG,kBAAC,IAAD,CACEI,UAAU,aACVG,GAAE,kBAAaP,EAAOD,OAErBD,GANA,UASAA,GAAc,YAGvB,4BACGG,EAEG,kBAAC,IAAD,CACEG,UAAU,WACVG,GAAE,kBAAaN,EAAOF,OAErBF,GANA,UASCA,GAAc,eC1DnBW,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzB,2BAAOL,UAAU,eACf,+BACE,4BACE,oCACA,mCACA,oCACA,oCACA,sCACA,wCAGJ,+BACGK,EAAOC,KAAI,SAAAlB,GAAM,OAChB,kBAAC,EAAD,CACEmB,IAAKnB,EAAOC,KACZD,OAAQA,UChBLoB,EAAa,WAAO,IAAD,EACFC,mBAAS,IADP,mBACvBJ,EADuB,KACfK,EADe,KAiB9B,OAdAC,qBAAU,WACR7B,IACG8B,MAAK,SAAAC,GAAM,OAAIH,EAAUG,EACvBP,KAAI,SAAAlB,GAAM,kCAEJA,GAFI,IAGPQ,OAAQiB,EAAOC,MAAK,SAAAC,GAAG,OAAIA,EAAI1B,OAASD,EAAOM,cAC/CG,OAAQgB,EAAOC,MAAK,SAAAC,GAAG,OAAIA,EAAI1B,OAASD,EAAOK,yBAGtD,IAKD,oCACE,2CACCY,EAAOW,OAAS,GACf,kBAAC,EAAD,CACEX,OAAQA,MCaHY,EAhCH,kBACV,yBAAKjB,UAAU,OACb,gCACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,cAMR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,KAAK,IAAIC,OAAK,GACnB,yCAEF,kBAAC,IAAD,CAAOD,KAAK,SACV,kBAAC,IAAD,CAAUf,GAAG,OAEf,kBAAC,IAAD,CAAOe,KAAK,wBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UC3BRE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.54bfc126.chunk.js","sourcesContent":["import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>Page not found</h1>\n);\n","// eslint-disable-next-line max-len\nconst PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async() => {\n  const response = await fetch(PEOPLE_URL);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, useParams } from 'react-router-dom';\nimport classnames from 'classnames';\n// import { PersonName } from '../PersonName';\n\nexport const PersonRow = ({ person }) => {\n  const { name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father } = person;\n  // console.log(slug);\n  const { personSlug } = useParams();\n\n  return (\n    <>\n      <tr className={classnames({\n        activePerson: personSlug === slug,\n      })}\n      >\n        <td>\n          <NavLink\n            className={classnames({\n              'link-man': sex === 'm',\n              'link-woman': sex === 'f',\n            })}\n            to={`/people/${slug}`}\n          >\n            {name}\n          </NavLink>\n        </td>\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>\n          {mother\n            ? (\n              <NavLink\n                className=\"link-woman\"\n                to={`/people/${mother.slug}`}\n              >\n                {motherName}\n              </NavLink>\n            )\n            : `${motherName || 'No info'}`\n          }\n        </td>\n        <td>\n          {father\n            ? (\n              <NavLink\n                className=\"link-man\"\n                to={`/people/${father.slug}`}\n              >\n                {fatherName}\n              </NavLink>\n            )\n            : (`${fatherName || 'No info'}`)\n          }\n        </td>\n      </tr>\n    </>\n  );\n};\n\nPersonRow.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    fatherName: PropTypes.string,\n    motherName: PropTypes.string,\n    slug: PropTypes.string.isRequired,\n    mother: PropTypes.object,\n    father: PropTypes.object,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PersonRow } from '../PersonRow';\n\nexport const PeopleTable = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow\n          key={person.name}\n          person={person}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(result => setPeople(result\n        .map(person => (\n          {\n            ...person,\n            mother: result.find(any => any.name === person.motherName),\n            father: result.find(any => any.name === person.fatherName),\n          }\n        ))));\n  }, []);\n\n  // console.log(people);\n\n  return (\n    <>\n      <h1>People Page</h1>\n      {people.length > 0 && (\n        <PeopleTable\n          people={people}\n        />\n      ) }\n    </>\n  );\n};\n","import React from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\n\nimport './App.scss';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/people\">People</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n\n    <Switch>\n      <Route path=\"/\" exact>\n        <h1>HomePage</h1>\n      </Route>\n      <Route path=\"/home\">\n        <Redirect to=\"/\" />\n      </Route>\n      <Route path=\"/people/:personSlug?\">\n        <PeoplePage />\n      </Route>\n      <Route path=\"*\">\n        <NotFoundPage />\n      </Route>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}